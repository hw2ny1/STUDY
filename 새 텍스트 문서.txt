from collections import deque

dx = [1,-1,0,0]
dy = [0,0,1,-1]

def bfs(x,y,):
    q = deque()
    q.append([x,y])
    visited = [[-1 for _ in range(col+2)] for _ in range(row+2)]
    visited[x][y] = 0
    while q:
        x, y = q.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= row or ny < 0 or ny >= col:continue
            if visited[nx][ny] > -1:continue
            if arr[nx][ny] == ".":
                visited[nx][ny] = visited[x][y]
                q.appendleft([nx,ny])
            elif arr[nx][ny] == "#":
                visited[nx][ny] = visited[x][y] + 1
                q.append([nx,ny])
    for v in visited:
        print(*v)


T = int(input())
for tc in range(1,T+1):
    row, col = map(int,input().split())
    arr =[]
    for _ in range(row):
        arr.append(list(input()))

    for a in arr:
        print(*a)

    J = []
    D = []
    exit = []
    for i in range(row):
        for j in range(col):
            if arr[i][j] == "$":
                J.append([i,j])
            if arr[i][j] == "#":
                D.append([i,j])
    print(J)
    bfs(J[0][0],J[0][1])
