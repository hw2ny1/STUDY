Front_end 개발은 web app 또는 web site의 UI (아이콘)/UX (경험)을 제작 관리하는 과정.

Front_end 프레임워크와 라이브러리(React, Angular, Vue.js)를 사용하여 개발 효율성을 높이고 web app의 복잡성 관리

web app이란, 웹 페이지가 그대로 보이는 것이 아닌 디바이스에 설치된 app처럼  보이는 것. ( 반응형이 포함된)

SPA ( single page application) 서버에서 최초 1장의 HTML만 전달 받아 모든 요청에 대응하는 방식.
 <-> MPA
어떻게 SPA로 할 수 있을까? CSR 방식으로 요청 처리를 하기 때문.

SSR이란 Server가 사용자의 요청에 적합한 HTML을 렌더링하여 제공하는 방식
필요시 새로고침

CSR은 각 요청에 대한 대응을 JavaScript를 사용하여 필요한 부분만 다시 렌더링

CSR을 사용하는 이유 - 클라이언트-서버간 트래픽 감소, 역할이 분리되어 협업이 용이해진다..

대신 첫 구동시 필요한 데이터가 많으면 많을수록 최초 작동 시작까지 오랜 시간이 소요.
검색 엔진 최적화가 어려움 - 서버가 제공하는 것은 텅 빈 HTML인데 AJAX 요청으로 얻은 JSON 데이터로 클라이언트가 내용을 채움.

서비스에 적절한 렌더링 방식을 활용하자.

MVVM ( Model-View-ViewModel ) 패턴을 기반으로 한다.
view와 model 사이에 viewmodel을 추가함으로써 의존성을 분리하는 패턴이다.
따라서 코드 유지보수성이 향상되고 view와 model간의 데이터 전달과 이벤트 처리를 간결하게 할 수 있다.

여기서 view는 장고에서 template 같은 곳이고  ui에 가깝다. model은 model 맞음.

vue.js는 CDN을 통해 불러오거나 따로 설치를 해야한다.

그리고 new Vue()를 통해서 인스턴스를 생성하는데 데이터, 메소드, 컴포넌트 등을 포함하는 JavaScript 객체이다.

vue.js에서는 vue 인스턴스를 HTML 문서의 특정 요소에 마운트하여 사용하는데, el 속성을 사용하여 지정할 수 있다.

data 속성을 사용하여 vue 인스턴스 데이터를 지정할 수 있고 method를 사용하여 업데이트 할 수 있다.

-------------------------
앱단위에서는 유일성을 보장하고자 id를 사용함.

CSR 과 비동기 렌더링 